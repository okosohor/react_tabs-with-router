{"version":3,"sources":["components/TodoContent.tsx","components/Tabs.tsx","App.tsx","index.tsx"],"names":["TodoContent","tabs","tabId","selectedTab","find","tab","id","className","title","Tabs","isSelected","map","cn","to","content","App","useParams","path","element","replace","index","ReactDOM","render","document","getElementById"],"mappings":"gOAOaA,EAA8B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAE5CC,EAAcF,EAAKG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,KAEhD,OACE,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAcA,EAAYK,MAAQ,yB,gBCJ5BC,EAAuB,SAAC,GAAqB,IAAnBR,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAErCQ,EAAa,SAACL,GAAD,OAAcA,EAAIC,KAAOJ,GAE5C,OACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKU,KAAI,SAAAN,GAAG,OACX,oBACE,UAAQ,MAERE,UAAWK,IAAG,CAAE,YAAaF,EAAWL,KAH1C,SAKE,cAAC,IAAD,CAAMQ,GAAE,gBAAWR,EAAIC,IAAvB,SAA8BD,EAAIG,SAH7BH,EAAIC,YCLfL,EAAO,CACX,CAAEK,GAAI,QAASE,MAAO,QAASM,QAAS,eACxC,CAAER,GAAI,QAASE,MAAO,QAASM,QAAS,eACxC,CAAER,GAAI,QAASE,MAAO,QAASM,QAAS,gBAG7BC,EAAM,WACjB,MAAwBC,cAAhBd,aAAR,MAAgB,IAAhB,EAEA,OACE,qCAEE,qBACEK,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,cAAvB,kBACA,cAAC,IAAD,CAAMM,GAAG,QAAQN,UAAU,cAA3B,yBAKN,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEU,KAAK,IACLC,QAAS,oBAAIX,UAAU,QAAd,yBAGX,cAAC,IAAD,CACEU,KAAK,OACLC,QAAS,cAAC,IAAD,CAAUL,GAAG,IAAIM,SAAO,MAGnC,eAAC,IAAD,CACEF,KAAK,OACLC,QACE,qCACE,qCACE,oBAAIX,UAAU,QAAd,uBACA,cAAC,EAAD,CAAMN,KAAMA,EAAMC,MAAOA,OAG3B,cAAC,IAAD,OATN,UAaE,cAAC,IAAD,CACEkB,OAAK,EACLF,QACE,qBAAKX,UAAU,QAAQ,UAAQ,aAA/B,mCAMJ,cAAC,IAAD,CACEU,KAAK,SACLC,QAAS,cAAC,EAAD,CAAajB,KAAMA,EAAMC,MAAOA,SAI7C,cAAC,IAAD,CACEe,KAAK,IACLC,QAAS,oBAAIX,UAAU,QAAd,yCC7EvBc,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f51c5ee.chunk.js","sourcesContent":["import { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  tabId: string;\n}\n\nexport const TodoContent:React.FC<Props> = ({ tabs, tabId }) => {\n  // const { tabId = 0 } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {selectedTab ? selectedTab.title : 'Please select a tab'}\n    </div>\n  );\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  tabId: string;\n}\n\nexport const Tabs:React.FC<Props> = ({ tabs, tabId }) => {\n  // const { tabId = 0 } = useParams();\n  const isSelected = (tab: Tab) => tab.id === tabId;\n\n  return (\n    <div className=\"tabs is-boxed\">\n      <ul>\n        {tabs.map(tab => (\n          <li\n            data-cy=\"Tab\"\n            key={tab.id}\n            className={cn({ 'is-active': isSelected(tab) })}\n          >\n            <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  Link,\n  Navigate,\n  Outlet,\n  Route,\n  Routes,\n  useParams,\n} from 'react-router-dom';\nimport { TodoContent } from './components/TodoContent';\nimport { Tabs } from './components/Tabs';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const { tabId = '0' } = useParams();\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to=\"/\" className=\"navbar-item\">Home</Link>\n            <Link to=\"/tabs\" className=\"navbar-item\">Tabs</Link>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home page</h1>}\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"tabs\"\n              element={(\n                <>\n                  <>\n                    <h1 className=\"title\">Tabs page</h1>\n                    <Tabs tabs={tabs} tabId={tabId} />\n                  </>\n\n                  <Outlet />\n                </>\n              )}\n            >\n              <Route\n                index\n                element={(\n                  <div className=\"block\" data-cy=\"TabContent\">\n                    Please select a tab\n                  </div>\n                )}\n              />\n\n              <Route\n                path=\":tabId\"\n                element={<TodoContent tabs={tabs} tabId={tabId} />}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}